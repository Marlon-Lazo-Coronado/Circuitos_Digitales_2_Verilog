$date
	Wed Sep  2 15:52:06 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Banco_Prueba_Componentes $end
$var wire 1 ! SMUX1 $end
$var wire 1 " selector $end
$var wire 1 # data_out $end
$var wire 2 $ data_in1 [1:0] $end
$var wire 2 % data_in0 [1:0] $end
$var wire 1 & clok $end
$var wire 1 ' SOR $end
$var wire 1 ( SNOT $end
$var wire 2 ) SMUX1_2bits [1:0] $end
$var wire 1 * SAND $end
$var wire 1 + B $end
$var wire 1 , A $end
$scope module MUX2x1 $end
$var wire 1 " selector $end
$var wire 2 - SMUX1_2bits [1:0] $end
$var wire 1 . C3 $end
$var wire 1 / C2 $end
$var wire 2 0 B [1:0] $end
$var wire 2 1 A [1:0] $end
$scope module isntancia $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 / SMUX1 $end
$var wire 1 " selector $end
$var wire 1 4 C4 $end
$var wire 1 5 C3 $end
$var wire 1 6 C2 $end
$var wire 1 7 C1 $end
$scope module w $end
$var wire 1 4 SOR $end
$var wire 1 5 B $end
$var wire 1 6 A $end
$upscope $end
$scope module x $end
$var wire 1 7 SNOT $end
$var wire 1 " A $end
$upscope $end
$scope module y $end
$var wire 1 7 A $end
$var wire 1 2 B $end
$var wire 1 6 SAND $end
$upscope $end
$scope module z $end
$var wire 1 3 B $end
$var wire 1 5 SAND $end
$var wire 1 " A $end
$upscope $end
$upscope $end
$scope module isntancia2 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 . SMUX1 $end
$var wire 1 " selector $end
$var wire 1 : C4 $end
$var wire 1 ; C3 $end
$var wire 1 < C2 $end
$var wire 1 = C1 $end
$scope module w $end
$var wire 1 : SOR $end
$var wire 1 ; B $end
$var wire 1 < A $end
$upscope $end
$scope module x $end
$var wire 1 = SNOT $end
$var wire 1 " A $end
$upscope $end
$scope module y $end
$var wire 1 = A $end
$var wire 1 8 B $end
$var wire 1 < SAND $end
$upscope $end
$scope module z $end
$var wire 1 9 B $end
$var wire 1 ; SAND $end
$var wire 1 " A $end
$upscope $end
$upscope $end
$upscope $end
$scope module P_ANT $end
$var wire 1 * SAND $end
$var wire 1 + B $end
$var wire 1 , A $end
$upscope $end
$scope module P_FLOP $end
$var wire 1 & clok $end
$var wire 1 , A $end
$var reg 1 # data_out $end
$upscope $end
$scope module P_NOT $end
$var wire 1 ( SNOT $end
$var wire 1 , A $end
$upscope $end
$scope module P_OR $end
$var wire 1 ' SOR $end
$var wire 1 + B $end
$var wire 1 , A $end
$upscope $end
$scope module probador_Instanciado $end
$var wire 1 * SAND $end
$var wire 1 ! SMUX1 $end
$var wire 2 > SMUX1_2bits [1:0] $end
$var wire 1 ( SNOT $end
$var wire 1 ' SOR $end
$var wire 1 # data_out $end
$var reg 1 , A $end
$var reg 1 + B $end
$var reg 1 & clok $end
$var reg 2 ? data_in0 [1:0] $end
$var reg 2 @ data_in1 [1:0] $end
$var reg 1 " selector $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 @
b0 ?
b0 >
1=
0<
0;
0:
09
08
17
06
05
04
03
02
b0 1
b0 0
0/
0.
b0 -
0,
0+
0*
b0 )
1(
0'
0&
b0 %
b0 $
x#
0"
z!
$end
#200
0=
07
0#
1"
1&
#400
0&
#600
13
1=
17
b1 $
b1 0
b1 @
0"
1&
#800
0&
#1000
b1 )
b1 -
b1 >
1/
14
0=
15
07
1"
1&
#1200
0&
#1400
b0 )
b0 -
b0 >
0/
04
19
03
1=
05
17
b10 $
b10 0
b10 @
0"
1&
#1600
0&
#1800
b10 )
b10 -
b10 >
1.
1:
1;
0=
07
1"
1&
#2000
0&
#2200
b0 )
b0 -
b0 >
0.
0:
13
0;
1=
17
b11 $
b11 0
b11 @
0"
1&
#2400
0&
#2600
1.
1:
b11 )
b11 -
b11 >
1/
14
1;
0=
15
07
1"
1&
#2800
0&
#3000
b1 )
b1 -
b1 >
0.
0:
16
12
09
03
0;
1=
05
17
b1 %
b1 1
b1 ?
b0 $
b0 0
b0 @
0"
1&
#3200
0&
#3400
b0 )
b0 -
b0 >
0/
04
06
0=
07
1"
1&
#3600
0&
#3800
b1 )
b1 -
b1 >
1/
14
16
13
1=
17
b1 $
b1 0
b1 @
0"
1&
#4000
0&
#4200
06
0=
15
07
1"
1&
#4400
0&
#4600
16
19
03
1=
05
17
b10 $
b10 0
b10 @
0"
1&
#4800
0&
#5000
0/
04
b10 )
b10 -
b10 >
1.
1:
06
1;
0=
07
1"
1&
#5200
0&
#5400
1/
14
b1 )
b1 -
b1 >
0.
0:
16
13
0;
1=
17
b11 $
b11 0
b11 @
0"
1&
#5600
0&
#5800
b11 )
b11 -
b11 >
1.
1:
06
1;
0=
15
07
1"
1&
#6000
0&
#6200
1<
b10 )
b10 -
b10 >
0/
04
18
02
09
03
0;
1=
05
17
b10 %
b10 1
b10 ?
b0 $
b0 0
b0 @
0"
1&
#6400
0&
#6600
b0 )
b0 -
b0 >
0.
0:
0<
0=
07
1"
1&
#6800
0&
#7000
b10 )
b10 -
b10 >
1.
1:
1<
13
1=
17
b1 $
b1 0
b1 @
0"
1&
#7200
0&
#7400
0.
0:
0<
b1 )
b1 -
b1 >
1/
14
0=
15
07
1"
1&
#7600
0&
#7800
1.
1:
1<
b10 )
b10 -
b10 >
0/
04
19
03
1=
05
17
b10 $
b10 0
b10 @
0"
1&
#8000
0&
#8200
0<
1;
0=
07
1"
1&
#8400
0&
#8600
1<
13
0;
1=
17
b11 $
b11 0
b11 @
0"
1&
#8800
0&
#9000
0<
b11 )
b11 -
b11 >
1/
14
1;
0=
15
07
1"
1&
#9200
0&
#9400
1<
16
12
09
03
0;
1=
05
17
b11 %
b11 1
b11 ?
b0 $
b0 0
b0 @
0"
1&
#9600
0&
#9800
0.
0:
b0 )
b0 -
b0 >
0/
04
0<
06
0=
07
1"
1&
#10000
0&
#10200
1.
1:
b11 )
b11 -
b11 >
1/
14
1<
16
13
1=
17
b1 $
b1 0
b1 @
0"
1&
#10400
0&
#10600
b1 )
b1 -
b1 >
0.
0:
0<
06
0=
15
07
1"
1&
#10800
0&
#11000
b11 )
b11 -
b11 >
1.
1:
1<
16
19
03
1=
05
17
b10 $
b10 0
b10 @
0"
1&
#11200
0&
#11400
b10 )
b10 -
b10 >
0/
04
0<
06
1;
0=
07
1"
1&
#11600
0&
#11800
b11 )
b11 -
b11 >
1/
14
1<
16
13
0;
1=
17
b11 $
b11 0
b11 @
0"
1&
#12000
0&
#12200
0<
06
1;
0=
15
07
1"
1&
#12400
0&
#12600
0.
0:
b0 )
b0 -
b0 >
0/
04
0;
1=
05
17
09
03
08
02
0"
b0 $
b0 0
b0 @
b0 %
b0 1
b0 ?
1&
